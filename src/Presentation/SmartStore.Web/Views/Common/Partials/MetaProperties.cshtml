@model MetaPropertiesModel

@using SmartStore.Web.Models.Common;

@{
    Html.AddCustomHeadParts("<meta property='og:site_name' content='{0}' />".FormatInvariant(Model.SiteName),
        "<meta property='og:site' content='{0}' />".FormatInvariant(Model.Site),
        "<meta property='og:url' content='{0}' />".FormatInvariant(Model.Url),
        "<meta property='og:type' content='{0}' />".FormatInvariant(Model.Type),
        "<meta property='og:title' content='{0}' />".FormatInvariant(Html.Encode(Model.Title)),
        "<meta property='twitter:card' content='summary' />",
        "<meta property='twitter:title' content='{0}' />".FormatInvariant(Html.Encode(Model.Title)));

    if (Model.Description.HasValue())
    {
        Html.AddCustomHeadParts("<meta property='og:description' content='{0}' />".FormatInvariant(Html.Encode(Model.Description)),
            "<meta property='twitter:description' content='{0}' />".FormatInvariant(Html.Encode(Model.Description)));
    }

    if (Model.ImageUrl.HasValue())
    {
        Html.AddCustomHeadParts("<meta property='og:image' content='{0}' />".FormatInvariant(Model.ImageUrl),
            "<meta property='og:image:type' content='{0}' />".FormatInvariant(Model.ImageType),
            "<meta property='twitter:image' content='{0}' />".FormatInvariant(Model.ImageUrl));

        if (Model.ImageAlt.HasValue())
        {
            Html.AddCustomHeadParts("<meta property='og:image:alt' content='{0}' />".FormatInvariant(Model.ImageAlt),
                "<meta property='twitter:image:alt' content='{0}' />".FormatInvariant(Model.ImageAlt));
        }

        if (Model.ImageWidth > 0 && Model.ImageHeight > 0)
        {
            Html.AddCustomHeadParts("<meta property='og:image:width' content='{0}' />".FormatInvariant(Model.ImageWidth),
                "<meta property='og:image:height' content='{0}' />".FormatInvariant(Model.ImageHeight));
        }
    }

    if (Model.ArticleSection.HasValue())
    {
        Html.AddCustomHeadParts("<meta property='article:section' content='{0}' />".FormatInvariant(Model.ArticleSection));
    }

    if (Model.ArticleTags != null && Model.ArticleTags.Count() > 0)
    {
        foreach (var articleTag in Model.ArticleTags)
        {
            Html.AddCustomHeadParts("<meta property='article:tag' content='{0}' />".FormatInvariant(articleTag));
        }
    }

    if (Model.PublishedTime != null)
    {
        Html.AddCustomHeadParts("<meta property='article:published_time' content='{0}' />".FormatInvariant(Model.PublishedTime));
    }

    if (Model.TwitterSite.HasValue())
    {
        Html.AddCustomHeadParts("<meta property='twitter:site' content='{0}' />".FormatInvariant(Model.TwitterSite));
    }

    if (Model.FacebookAppId.HasValue())
    {
        Html.AddCustomHeadParts("<meta property='fb:app_id' content='{0}' />".FormatInvariant(Model.FacebookAppId));
    }
}