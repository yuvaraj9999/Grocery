@model ProductDetailsModel

@using SmartStore.Web.Models.Catalog;
@using SmartStore.Core.Domain.Directory;

@{
    var isBundleItem = Model.IsBundlePart;
    var displayStock = Model.StockAvailability.HasValue();
    var deliveryPresentation = Model.DeliveryTimesPresentation;

    // Never show delivery time when product is out of stock AND stock is displayed.
    var showDeliveryInfos =
        !isBundleItem &&
        (Model.IsShipEnabled && deliveryPresentation != DeliveryTimesPresentation.None) &&
        (!displayStock || (displayStock && Model.IsAvailable));

    var showAttrs = showDeliveryInfos || displayStock || Model.DisplayBackInStockSubscription;
    if (!showAttrs)
    {
        return;
    }

    var showStatusLabel =
        deliveryPresentation == DeliveryTimesPresentation.LabelOnly ||
        deliveryPresentation == DeliveryTimesPresentation.LabelAndDate ||
        !Model.DeliveryTimeDate.HasValue();

    var showDeliveryDate =
        (deliveryPresentation == DeliveryTimesPresentation.DateOnly || deliveryPresentation == DeliveryTimesPresentation.LabelAndDate) &&
        Model.DeliveryTimeDate.HasValue();

    var statusLabel = Model.DisplayDeliveryTimeAccordingToStock ? Model.DeliveryTimeName : Model.StockAvailability;
    var statusColor = Model.DisplayDeliveryTimeAccordingToStock && !displayStock ? Model.DeliveryTimeHexValue : "";
}

<div class="pd-stock-info@(isBundleItem ? "" : " pd-group")">
	@if (displayStock)
	{
		if (!isBundleItem)
		{
			<meta itemprop="availability" content="http://schema.org/@(Model.IsAvailable ? "InStock" : "OutOfStock")" />
		}
		<div class="pd-stock @(Model.IsAvailable ? "pd-instock" : "pd-outofstock")">@Model.StockAvailability</div>
	}

	@if (showDeliveryInfos)
    {
        if (showStatusLabel)
        {
			<div class="deliverytime-group d-flex">
				<span>@T("Products.DeliveryTime")</span>
				<span class="delivery-time" title="@T("Products.DeliveryTime") @statusLabel" @Html.Attr("style", "color: " + statusColor, statusColor.HasValue())>
					<i class="fa fa-circle delivery-time-status" style="color: @Model.DeliveryTimeHexValue"></i>
					@statusLabel
				</span>
			</div>
        }
        if (showDeliveryDate)
        {
			<div class="deliverytime-group d-flex">
				<span class="delivery-date-block">
                    @if (!showStatusLabel)
                    {
                        <span>@T("Products.DeliveryDate")</span>
                    }
					<span class="delivery-date">@Html.Raw(Model.DeliveryTimeDate)</span>
				</span>
			</div>
        }
    }

	@if (Model.DisplayBackInStockSubscription)
	{
		<div class="pd-stocksub">
			@if (!Model.IsCurrentCustomerRegistered)
			{
				<a href="@Url.RouteUrl("Login", new { returnUrl = Request.RawUrl })" rel="nofollow">@T("BackInStockSubscriptions.NotifyMeWhenAvailable")</a>
			}
			else
			{
				<a class="stock-subscriber" data-toggle="modal" href="@Url.Action("BackInStockSubscribe", new { id = @Model.Id })" rel="nofollow">
					@T("BackInStockSubscriptions.NotifyMeWhenAvailable")
				</a>
				<script>
					$(function () {
						$("a.stock-subscriber").on('click', function (e) {
							e.preventDefault();
							openPopup({ url: $(this).attr('href'), large: false, flex: false });
							return false;
						});
					});
				</script>
			}
		</div>
	}
</div>