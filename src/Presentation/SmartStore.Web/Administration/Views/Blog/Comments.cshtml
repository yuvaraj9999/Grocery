@using Telerik.Web.Mvc.UI
@{
	int? filterByBlogPostId = ViewBag.FilterByBlogPostId;

    ViewBag.Title = T("Admin.ContentManagement.Blog.Comments").Text;
}

<div class="section-header">
    <div class="title">
        <i class="fa fa-comments"></i>
        @T("Admin.ContentManagement.Blog.Comments")
    </div>
    <div class="options">
    </div>
</div>

<div>
	@(Html.Telerik().Grid<BlogCommentModel>()
        .Name("comments-grid")
        .DataKeys(x =>
        {
            x.Add(y => y.Id).RouteKey("Id");
        })
        .Columns(columns =>
        {
            columns.Bound(x => x.Id);
            columns.Bound(x => x.BlogPostTitle)
                .ClientTemplate("<a href=\"" + Url.Content("~/Admin/Blog/Edit/") + "<#= BlogPostId #>\"><#= BlogPostTitle #></a>");
            columns.Bound(x => x.CustomerId)
                .ClientTemplate("<a href=\"" + Url.Content("~/Admin/Customer/Edit/") + "<#= CustomerId #>\"><#= CustomerName #></a>");
            columns.Bound(x => x.Comment)
                .Encoded(false);
            columns.Bound(x => x.IpAddress);
            columns.Bound(x => x.CreatedOn);
            columns.Command(commands =>
            {
                commands.Delete().Localize(T);
            })
            .HtmlAttributes(new { align = "right" });
        })
        .Pageable(settings => settings.PageSize((int)ViewBag.GridPageSize).Position(GridPagerPosition.Both))
        .DataBinding(dataBinding =>
        {
            var settingBuilder = dataBinding.Ajax();
            if (filterByBlogPostId.HasValue)
            {
                settingBuilder = settingBuilder.Select("Comments", "Blog", new { filterByBlogPostId = filterByBlogPostId.Value });
                settingBuilder = settingBuilder.Delete("CommentDelete", "Blog", new { filterByBlogPostId = filterByBlogPostId.Value });
            }
            else
            {
                settingBuilder = settingBuilder.Select("Comments", "Blog");
                settingBuilder = settingBuilder.Delete("CommentDelete", "Blog");
            }
        })
        .PreserveGridState()
        .EnableCustomBinding(true))
</div>

