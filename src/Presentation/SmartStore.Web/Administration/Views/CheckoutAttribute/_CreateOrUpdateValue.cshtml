@model CheckoutAttributeValueModel

@Html.AntiForgeryToken()
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.CheckoutAttributeId)
@Html.HiddenFor(model => model.IsListTypeAttribute)

@(Html.LocalizedEditor<CheckoutAttributeValueModel, CheckoutAttributeValueLocalizedModel>("checkoutattributevalue-localized",
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Locales[item].Name)
			</td>
			<td class="adminData">
				@*IMPORTANT: Do not delete, this hidden element contains the id to assign localized values to the corresponding language *@
				@Html.HiddenFor(model => model.Locales[item].LanguageId)

				@Html.EditorFor(model => Model.Locales[item].Name)
				@Html.ValidationMessageFor(model => model.Locales[item].Name)
			</td>
		</tr>
	</table>
	,
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Name)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.Name)
				@Html.ValidationMessageFor(model => model.Name)
			</td>
		</tr>
	</table>
))

<table class="adminContent">
    @if (Model.IsListTypeAttribute)
    {
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.MediaFileId)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.MediaFileId)
                @Html.ValidationMessageFor(model => model.MediaFileId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Color)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Color)
                @Html.ValidationMessageFor(model => model.Color)
            </td>
        </tr>
    }
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.PriceAdjustment)
        </td>
        <td class="adminData">
			@Html.EditorFor(model => model.PriceAdjustment, new { postfix = Model.PrimaryStoreCurrencyCode })
            @Html.ValidationMessageFor(model => model.PriceAdjustment)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.WeightAdjustment)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.WeightAdjustment, new { postfix = Model.BaseWeightIn })
            @Html.ValidationMessageFor(model => model.WeightAdjustment)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.IsPreSelected)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.IsPreSelected)
            @Html.ValidationMessageFor(model => model.IsPreSelected)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.DisplayOrder)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.DisplayOrder)
            @Html.ValidationMessageFor(model => model.DisplayOrder)
        </td>
    </tr>
</table>

