@model StoreModel

@Html.AntiForgeryToken()
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

<table class="adminContent">
	<tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.LogoMediaFileId)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.LogoMediaFileId, new { transientUpload = true })
            @Html.ValidationMessageFor(model => model.LogoMediaFileId)
        </td>
    </tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.Name)
		</td>
		<td class="adminData">
			@Html.EditorFor(model => model.Name)
			@Html.ValidationMessageFor(model => model.Name)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.Url)
		</td>
		<td class="adminData">
			@Html.EditorFor(model => model.Url)
			@Html.ValidationMessageFor(model => model.Url)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.Hosts)
		</td>
		<td class="adminData">
			@Html.TextBoxFor(model => model.Hosts)
			@Html.ValidationMessageFor(model => model.Hosts)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.ContentDeliveryNetwork)
		</td>
		<td class="adminData">
			@Html.EditorFor(model => model.ContentDeliveryNetwork)
			@Html.ValidationMessageFor(model => model.ContentDeliveryNetwork)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.PrimaryStoreCurrencyId)
		</td>
		<td class="adminData">
			@Html.DropDownListFor(model => model.PrimaryStoreCurrencyId, Model.AvailableCurrencies)
			@Html.ValidationMessageFor(model => model.PrimaryStoreCurrencyId)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.PrimaryExchangeRateCurrencyId)
		</td>
		<td class="adminData">
			@Html.DropDownListFor(model => model.PrimaryExchangeRateCurrencyId, Model.AvailableCurrencies)
			@Html.ValidationMessageFor(model => model.PrimaryExchangeRateCurrencyId)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.SslEnabled)
		</td>
		<td class="adminData">
			@Html.CheckBoxFor(model => model.SslEnabled, new { data_toggler_for = "#pnlSecureUrl" })
			@Html.ValidationMessageFor(model => model.SslEnabled)
		</td>
	</tr>
	<tbody id="pnlSecureUrl">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.SecureUrl)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.SecureUrl)
				@Html.ValidationMessageFor(model => model.SecureUrl)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.ForceSslForAllPages)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.ForceSslForAllPages)
				@Html.ValidationMessageFor(model => model.ForceSslForAllPages)
			</td>
		</tr>
	</tbody>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.HtmlBodyId)
		</td>
		<td class="adminData">
			@Html.EditorFor(model => model.HtmlBodyId)
			@Html.ValidationMessageFor(model => model.HtmlBodyId)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.DisplayOrder)
		</td>
		<td class="adminData">
			@Html.EditorFor(model => model.DisplayOrder)
			@Html.ValidationMessageFor(model => model.DisplayOrder)
		</td>
	</tr>
    @if (Model.Id > 0)
    {
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Id)
            </td>
            <td class="adminData">
                @Html.TextBoxFor(model => model.Id, new { @readonly = "readonly", @class = "form-control-plaintext" })
            </td>
        </tr>
    }

	<tr>
		<td colspan="2">
			<div class="admin-config-group">
				<div class="title">
					Icons
				</div>
			</div>
		</td>
	</tr>
	<tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.FavIconMediaFileId)
        </td>
		<td class="adminData">
			@Html.EditorFor(model => model.FavIconMediaFileId, new { transientUpload = true })
			@Html.ValidationMessageFor(model => model.FavIconMediaFileId)
		</td>
    </tr>
	<tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.PngIconMediaFileId)
        </td>
		<td class="adminData">
			@Html.EditorFor(model => model.PngIconMediaFileId, new { transientUpload = true })
			@Html.ValidationMessageFor(model => model.PngIconMediaFileId)
		</td>
    </tr>
	<tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.AppleTouchIconMediaFileId)
        </td>
		<td class="adminData">
			@Html.EditorFor(model => model.AppleTouchIconMediaFileId, new { transientUpload = true })
			@Html.ValidationMessageFor(model => model.AppleTouchIconMediaFileId)
		</td>
    </tr>
	<tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.MsTileImageMediaFileId)
        </td>
		<td class="adminData">
			@Html.EditorFor(model => model.MsTileImageMediaFileId, new { transientUpload = true })
			@Html.ValidationMessageFor(model => model.MsTileImageMediaFileId)
		</td>
    </tr>
	<tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.MsTileColor)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.MsTileColor)
            @Html.ValidationMessageFor(model => model.MsTileColor)
        </td>
    </tr>
</table>
