@using Telerik.Web.Mvc.UI
@{
    int? filterByNewsItemId = ViewBag.FilterByNewsItemId;
    
    ViewBag.Title = T("Admin.ContentManagement.News.Comments").Text;
}
<div class="section-header">
    <div class="title">
        <i class="fa fa-comments"></i>
        @T("Admin.ContentManagement.News.Comments")
    </div>
    <div class="options">
    </div>
</div>

<div>
	@(Html.Telerik().Grid<NewsCommentModel>()
		.Name("comments-grid")
		.DataKeys(x =>
		{
			x.Add(y => y.Id).RouteKey("Id");
		})
		.Columns(columns =>
		{
			columns.Bound(x => x.Id);
			columns.Bound(x => x.NewsItemTitle)
				.ClientTemplate("<a href=\"" + Url.Content("~/Admin/News/Edit/") + "<#= NewsItemId #>\"><#= NewsItemTitle #></a>");
			columns.Bound(x => x.CustomerId)
				.ClientTemplate("<a href=\"" + Url.Content("~/Admin/Customer/Edit/") + "<#= CustomerId #>\"><#= CustomerName #></a>");
			columns.Bound(x => x.CommentTitle);
			columns.Bound(x => x.CommentText)
				.Encoded(false);
			columns.Bound(x => x.IpAddress);
			columns.Bound(x => x.CreatedOn);
			columns.Command(commands =>
			{
				commands.Delete().Localize(T);
			}).HtmlAttributes(new { align = "right" });
		})
		.Pageable(settings => settings.PageSize((int)ViewBag.GridPageSize).Position(GridPagerPosition.Both))
		.DataBinding(dataBinding =>
		{
			var settingBuilder = dataBinding.Ajax();
			if (filterByNewsItemId.HasValue)
			{
				settingBuilder = settingBuilder.Select("Comments", "News", new { filterByNewsItemId = filterByNewsItemId.Value });
				settingBuilder = settingBuilder.Delete("CommentDelete", "News", new { filterByNewsItemId = filterByNewsItemId.Value });
			}
			else
			{
				settingBuilder = settingBuilder.Select("Comments", "News");
				settingBuilder = settingBuilder.Delete("CommentDelete", "News");
			}
		})
		.PreserveGridState()
		.EnableCustomBinding(true))
</div>