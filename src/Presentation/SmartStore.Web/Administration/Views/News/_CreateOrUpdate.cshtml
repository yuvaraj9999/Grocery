@model NewsItemModel

@using Telerik.Web.Mvc.UI;
@using SmartStore.Web.Framework.UI;

@Html.AntiForgeryToken()
@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

@if (Model.IsSingleLanguageMode)
{
    Html.HiddenFor(model => model.LanguageId);
}

@Html.SmartStore().TabStrip().Name("news-edit").Style(TabsStyle.Material).Position(TabsPosition.Top).Items(x =>
{
	x.Add().Text(T("Admin.Common.Info").Text).Content(TabInfo()).Selected(true);
    x.Add().Text(T("Admin.Common.SEO").Text).Content(TabSeo());

	EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "news-edit", this.Html, this.Model));
})

@helper TabInfo()
{
    @(Html.LocalizedEditor<NewsItemModel, NewsItemLocalizedModel>("newsitem-info-localized",
        @<table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Locales[item].Title)
                </td>
                <td class="adminData">
					@*IMPORTANT: Do not delete, this hidden element contains the id to assign localized values to the corresponding language *@
					@Html.HiddenFor(model => model.Locales[item].LanguageId)

                    @Html.EditorFor(model => Model.Locales[item].Title)
                    @Html.ValidationMessageFor(model => model.Locales[item].Title)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Locales[item].Short)
                </td>
                <td class="adminData wide">
                    @Html.TextAreaFor(model => model.Locales[item].Short)
                    @Html.ValidationMessageFor(model => model.Locales[item].Short)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Locales[item].Full)
                </td>
                <td class="adminData wide">
                    @Html.EditorFor(model => model.Locales[item].Full, "Html")
                    @Html.ValidationMessageFor(model => model.Locales[item].Full)
                </td>
            </tr>
        </table>
        ,
        @<table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Title)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.Title)
                    @Html.ValidationMessageFor(model => model.Title)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Short)
                </td>
                <td class="adminData wide">
                    @Html.TextAreaFor(model => model.Short)
                    @Html.ValidationMessageFor(model => model.Short)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Full)
                </td>
                <td class="adminData wide">
                    @Html.EditorFor(x => x.Full, "Html")
                    @Html.ValidationMessageFor(model => model.Full)
                </td>
            </tr>
        </table>
    ))

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PictureId)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PictureId, new { transientUpload = true })
                @Html.ValidationMessageFor(model => model.PictureId)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.PreviewPictureId)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.PreviewPictureId, new { transientUpload = true })
                @Html.ValidationMessageFor(model => model.PreviewPictureId)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <div class="admin-config-group">
                    <div class="head">@T("Admin.ContentManagement.News.Heading.Publish")</div>
                </div>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Published)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Published)
                @Html.ValidationMessageFor(model => model.Published)
            </td>
        </tr>
        @if (!Model.IsSingleLanguageMode)
        {
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.LanguageId)
                </td>
                <td class="adminData">
                    @Html.DropDownListFor(model => model.LanguageId, Model.AvailableLanguages, T("Common.International"))
                    @Html.ValidationMessageFor(model => model.LanguageId)
                </td>
            </tr>
        }
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SelectedStoreIds)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SelectedStoreIds)
                @Html.ValidationMessageFor(model => model.SelectedStoreIds)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.CreatedOn)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CreatedOn)
                @Html.ValidationMessageFor(model => model.CreatedOn)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.StartDate)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.StartDate)
                @Html.ValidationMessageFor(model => model.StartDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.EndDate)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.EndDate)
                @Html.ValidationMessageFor(model => model.EndDate)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <hr />
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AllowComments)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AllowComments)
                @Html.ValidationMessageFor(model => model.AllowComments)
            </td>
        </tr>
    </table>
}

@helper TabSeo()
{
    @(Html.LocalizedEditor<NewsItemModel, NewsItemLocalizedModel>("newsitem-seo-localized",
        @<table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Locales[item].MetaTitle)
                </td>
                <td class="adminData">
                    @*IMPORTANT: Do not delete, this hidden element contains the id to assign localized values to the corresponding language *@
                    @Html.HiddenFor(model => model.Locales[item].LanguageId)

                    @Html.TextAreaFor(model => model.Locales[item].MetaTitle)
                    @Html.ValidationMessageFor(model => model.Locales[item].MetaTitle)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Locales[item].MetaDescription)
                </td>
                <td class="adminData">
                    @Html.TextAreaFor(model => model.Locales[item].MetaDescription)
                    @Html.ValidationMessageFor(model => model.Locales[item].MetaDescription)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Locales[item].MetaKeywords)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.Locales[item].MetaKeywords)
                    @Html.ValidationMessageFor(model => model.Locales[item].MetaKeywords)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.Locales[item].SeName)
                </td>
                <td class="adminData">
                    @Html.EditorFor(model => model.Locales[item].SeName)
                    @Html.ValidationMessageFor(model => model.Locales[item].SeName)
                </td>
            </tr>
        </table>
        ,
        @<table class="adminContent">
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.MetaTitle)
                </td>
                <td class="adminData">
                    @Html.TextAreaFor(x => x.MetaTitle)
                    @Html.ValidationMessageFor(model => model.MetaTitle)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.MetaDescription)
                </td>
                <td class="adminData">
                    @Html.TextAreaFor(x => x.MetaDescription)
                    @Html.ValidationMessageFor(model => model.MetaDescription)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.MetaKeywords)
                </td>
                <td class="adminData">
                    @Html.EditorFor(x => x.MetaKeywords)
                    @Html.ValidationMessageFor(model => model.MetaKeywords)
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    @Html.SmartLabelFor(model => model.SeName)
                </td>
                <td class="adminData">
                    @Html.EditorFor(x => x.SeName)
					@if (Model.Id != 0)
                    {
                        @Html.Action("NamesPerEntity", "UrlRecord", new { entityName = "NewsItem", entityId = Model.Id })
                    }
                    @Html.ValidationMessageFor(model => model.SeName)
                </td>
            </tr>
        </table>
    ))
}